//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Project4.RealtorSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RealtorSoap", Namespace="http://tempuri.org/")]
    public partial class Realtor : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback doUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteHouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback showSelectedHouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSelectedHouseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Realtor() {
            this.Url = global::Project4.Properties.Settings.Default.Project4_RealtorSvc_Realtor;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetHomesCompletedEventHandler GetHomesCompleted;
        
        /// <remarks/>
        public event doUpdatesCompletedEventHandler doUpdatesCompleted;
        
        /// <remarks/>
        public event deleteHouseCompletedEventHandler deleteHouseCompleted;
        
        /// <remarks/>
        public event addHouseCompletedEventHandler addHouseCompleted;
        
        /// <remarks/>
        public event showSelectedHouseCompletedEventHandler showSelectedHouseCompleted;
        
        /// <remarks/>
        public event updateSelectedHouseCompletedEventHandler updateSelectedHouseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHomes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHomes() {
            object[] results = this.Invoke("GetHomes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHomesAsync() {
            this.GetHomesAsync(null);
        }
        
        /// <remarks/>
        public void GetHomesAsync(object userState) {
            if ((this.GetHomesOperationCompleted == null)) {
                this.GetHomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHomesOperationCompleted);
            }
            this.InvokeAsync("GetHomes", new object[0], this.GetHomesOperationCompleted, userState);
        }
        
        private void OnGetHomesOperationCompleted(object arg) {
            if ((this.GetHomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHomesCompleted(this, new GetHomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/doUpdates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet doUpdates(int maxprice, int footage, int bedroom, int bathroom) {
            object[] results = this.Invoke("doUpdates", new object[] {
                        maxprice,
                        footage,
                        bedroom,
                        bathroom});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void doUpdatesAsync(int maxprice, int footage, int bedroom, int bathroom) {
            this.doUpdatesAsync(maxprice, footage, bedroom, bathroom, null);
        }
        
        /// <remarks/>
        public void doUpdatesAsync(int maxprice, int footage, int bedroom, int bathroom, object userState) {
            if ((this.doUpdatesOperationCompleted == null)) {
                this.doUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoUpdatesOperationCompleted);
            }
            this.InvokeAsync("doUpdates", new object[] {
                        maxprice,
                        footage,
                        bedroom,
                        bathroom}, this.doUpdatesOperationCompleted, userState);
        }
        
        private void OndoUpdatesOperationCompleted(object arg) {
            if ((this.doUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doUpdatesCompleted(this, new doUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteHouse(int houseID) {
            this.Invoke("deleteHouse", new object[] {
                        houseID});
        }
        
        /// <remarks/>
        public void deleteHouseAsync(int houseID) {
            this.deleteHouseAsync(houseID, null);
        }
        
        /// <remarks/>
        public void deleteHouseAsync(int houseID, object userState) {
            if ((this.deleteHouseOperationCompleted == null)) {
                this.deleteHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteHouseOperationCompleted);
            }
            this.InvokeAsync("deleteHouse", new object[] {
                        houseID}, this.deleteHouseOperationCompleted, userState);
        }
        
        private void OndeleteHouseOperationCompleted(object arg) {
            if ((this.deleteHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteHouseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addHouse(string address, string city, string state, string status, int price, int footage, int bedrooms, int bathrooms) {
            this.Invoke("addHouse", new object[] {
                        address,
                        city,
                        state,
                        status,
                        price,
                        footage,
                        bedrooms,
                        bathrooms});
        }
        
        /// <remarks/>
        public void addHouseAsync(string address, string city, string state, string status, int price, int footage, int bedrooms, int bathrooms) {
            this.addHouseAsync(address, city, state, status, price, footage, bedrooms, bathrooms, null);
        }
        
        /// <remarks/>
        public void addHouseAsync(string address, string city, string state, string status, int price, int footage, int bedrooms, int bathrooms, object userState) {
            if ((this.addHouseOperationCompleted == null)) {
                this.addHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHouseOperationCompleted);
            }
            this.InvokeAsync("addHouse", new object[] {
                        address,
                        city,
                        state,
                        status,
                        price,
                        footage,
                        bedrooms,
                        bathrooms}, this.addHouseOperationCompleted, userState);
        }
        
        private void OnaddHouseOperationCompleted(object arg) {
            if ((this.addHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHouseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/showSelectedHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet showSelectedHouse(int id) {
            object[] results = this.Invoke("showSelectedHouse", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void showSelectedHouseAsync(int id) {
            this.showSelectedHouseAsync(id, null);
        }
        
        /// <remarks/>
        public void showSelectedHouseAsync(int id, object userState) {
            if ((this.showSelectedHouseOperationCompleted == null)) {
                this.showSelectedHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowSelectedHouseOperationCompleted);
            }
            this.InvokeAsync("showSelectedHouse", new object[] {
                        id}, this.showSelectedHouseOperationCompleted, userState);
        }
        
        private void OnshowSelectedHouseOperationCompleted(object arg) {
            if ((this.showSelectedHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showSelectedHouseCompleted(this, new showSelectedHouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSelectedHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateSelectedHouse(string id, string status, string address, string city, string state, int price, int footage, int bedroom, int bathroom) {
            this.Invoke("updateSelectedHouse", new object[] {
                        id,
                        status,
                        address,
                        city,
                        state,
                        price,
                        footage,
                        bedroom,
                        bathroom});
        }
        
        /// <remarks/>
        public void updateSelectedHouseAsync(string id, string status, string address, string city, string state, int price, int footage, int bedroom, int bathroom) {
            this.updateSelectedHouseAsync(id, status, address, city, state, price, footage, bedroom, bathroom, null);
        }
        
        /// <remarks/>
        public void updateSelectedHouseAsync(string id, string status, string address, string city, string state, int price, int footage, int bedroom, int bathroom, object userState) {
            if ((this.updateSelectedHouseOperationCompleted == null)) {
                this.updateSelectedHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSelectedHouseOperationCompleted);
            }
            this.InvokeAsync("updateSelectedHouse", new object[] {
                        id,
                        status,
                        address,
                        city,
                        state,
                        price,
                        footage,
                        bedroom,
                        bathroom}, this.updateSelectedHouseOperationCompleted, userState);
        }
        
        private void OnupdateSelectedHouseOperationCompleted(object arg) {
            if ((this.updateSelectedHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSelectedHouseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetHomesCompletedEventHandler(object sender, GetHomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void doUpdatesCompletedEventHandler(object sender, doUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteHouseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addHouseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void showSelectedHouseCompletedEventHandler(object sender, showSelectedHouseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showSelectedHouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showSelectedHouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateSelectedHouseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591